@model List<MovieClub.Models.AdminModels.PendingReturnsModel>

@{
    var pendingreturns = Model;
}

@if (pendingreturns.Count != 0)
{
    var overdues = pendingreturns.Where(r=>r.DueDate<DateTime.Now);
    
    if(overdues.Count()!=0){
        foreach (var item in overdues)
        {
            <tr class="overdues">
                <td><a href="/Content/MovieDetails/@item.MovieId">@item.MovieName</a></td>
                <td>@item.UserName</td>
                <td>@item.DateTaken</td>
                <td id="passedduedate">@item.DueDate</td>
                <td>9.50</td>
                <td>
                    <a href="/Admin/MarkAsReturned/?movieid=@item.MovieId&&u=@item.UserId">Returned</a><a id="sendmessage-trigger" href="#sendmessage">Send Message</a>
                </td>
            </tr>
        }
    }

    var pendings = pendingreturns.Where(r => r.DueDate > DateTime.Now);

    if (pendings.Count() != 0)
    {
        foreach (var item in pendings)
        {
            <tr>
                <td><a href="/Content/MovieDetails/@item.MovieId">@item.MovieName</a></td>
                <td>@item.UserName</td>
                <td>@item.DateTaken</td>
                <td>@item.DueDate</td>
                <td>-</td>
                <td><a href="/Admin/MarkAsReturned/?movieid=@item.MovieId&&u=@item.UserId" class="button secondary tiny">Returned</a><a href="/Admin/SendMessage/?userid=@item.UserId" class="button secondary tiny">Send Message</a></td>
            </tr>
        }
    }
}
else
{
    <tr>
        <td colspan="5">No Pending returns</td>
    </tr>
}